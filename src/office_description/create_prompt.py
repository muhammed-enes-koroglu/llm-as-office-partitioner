import path_helper
path_helper.add_project_path()

import office_description.office_to_text as office_to_text
import office_description.office_to_json as office_to_json
import constants
import office_plans.office_plan as office_plan
import json

def create_prompt(office_coordinates, windows, doors, desks, persons, disturbing_persons, objects, disturbing_points, number_of_movable_walls=constants.NUMBER_OF_MOVABLE_WALLS, prompt_type=constants.CURRENT_PROMPT_TYPE):
    prompt = ''
    prompt += make_basic_prompt()

    if prompt_type == constants.PROMPT_FULL_TEXT:
         prompt += office_to_text.make_office_description(office_coordinates, windows, doors, desks, persons, disturbing_persons, objects, disturbing_points)
    
    if prompt_type == constants.PROMPT_JSON:
        office_json = office_to_json.make_office_description(office_coordinates, windows, doors, desks, persons, disturbing_persons, objects, disturbing_points)
        prompt += json.dumps(office_json) + '\n\n'

    prompt += define_goal(number_of_movable_walls)
    prompt += define_warnings()
    prompt += define_return_format()

    return prompt



def make_basic_prompt():
    basic_prompt = (
    "Act as an architectural designer. You will be given a description of an office layout, "
    "including fixed features such as walls, windows and doors. Your primary task is to suggest "
    "optimal placements for movable walls.\n\n"

    "These movable walls serve two main purposes:\n"
    "1. To enhance focus and concentration by blocking noise and thereby creating quieter or more private spaces. Noise can be generated by a point in the office or a person. It is better to block noise between a focused and disturbing person than between two disturbing persons.\n"
    "2. To improve overall office quality, such as increasing exposure to natural light, enhancing "
    "architectural aesthetics, and supporting efficient room circulation. A person wants as many window exposure as possible. Efficient room circulation means that people can move freely and easily between different areas of the office without obstruction. Architectural aesthetics means that the office design should be visually appealing.\n\n"

    "The office layout is represented as a 2-dimensional grid, with coordinates provided in meters. "
    "Each coordinate is denoted as (x, y), where:\n"
    "- x refers to the length (horizontal direction),\n"
    "- y refers to the width (vertical direction).\n\n"

    "Use your spatial reasoning to recommend thoughtful placements for the movable walls based on "
    "the provided layout and objectives.\n\n"

    "The office layout is given in json-format as follows:\n"
)
    return basic_prompt

def define_goal(number_of_movable_walls):
    goal = (
    "Each movable wall is a rectangle, defined by:\n"
    "- A center coordinate (x, y),\n"
    "- A rotation angle in degrees between -90 and 90.\n\n"

    f"A rotation angle of 0 means the wall is aligned horizontally. In this case, the wall has a fixed length of {constants.MOVABLE_WALL_LENGTH} meters "
    f"and a width of {constants.MOVABLE_WALL_WIDTH} meters, centered around its coordinate. For an angle of 0 and center (0,0), the wall is desribed by the corners:" 
    f"[({-constants.MOVABLE_WALL_LENGTH/2}, {-constants.MOVABLE_WALL_WIDTH/2}), ({-constants.MOVABLE_WALL_LENGTH/2}, {constants.MOVABLE_WALL_WIDTH/2}), ({constants.MOVABLE_WALL_LENGTH/2}, {constants.MOVABLE_WALL_WIDTH/2}), ({constants.MOVABLE_WALL_LENGTH/2}, {-constants.MOVABLE_WALL_WIDTH/2})].\n"

    f"Your task is to reason about the space and determine the optimal placement of {number_of_movable_walls} movable wall(s) by providing:\n"
    "- The center coordinate of each wall,\n"
    "- The rotation angle in degrees.\n\n"

    "You can reason about blocking noise as follows: draw a line between a disturbing point/person and another person. The noise will then be maximally blocked when the wall is somewhere perpendicular to that line. For example, if the disturbing point is at (1,1) and the person is at (3,3), the line has an angle of -45 degrees. The wall could therefore be placed at (2.5,2.5) with an angle of 45 degrees.\n"
    "Another example: if the disturbing point is at (1,1) and the person is at (3,4), the line has an angle of 56.31 degrees. The wall could therefore be placed at (2,2.3) with an angle of -33,69 degrees.\n"
    "One last example with multiple disturbing points: if there is a disturbing points at (2,2) and (4,2) and the person is at (3,4). If you have 2 moveable walls, you can place the first at (2.5,3) with an angle of 26.57 degrees and the second at (3.5,3) with an angle of -26.57. If you have only one moveable wall available, you have to check if it is possible to create a barrier for both lines. In this case, the wall could be placed at (3,3.5) with an angle of 0 degrees.\n\n"

    "The same reasoning can be applied to improve light conditions. Every point in a window can be connected to a person. However, now we want to maximize light exposure. This means that walls should break through as few lines as possible.\n\n"
)
    return goal

def define_warnings():
    warnings = (
    "It is essential that a walls are **inside the office coordinates** and do **not overlap with** other structures. "
    "If this is not the case, the solution is invalid and you will have to propose a new one.\n"
    "In addition, try to find solutions that take following constraints into account:\n"
    "- A wall must **not be placed too close to any person**.\n"
    "- Each wall should **meaningfully contribute** to improved focus and a better office environment, as previously described.\n\n"
)
    return warnings

def define_return_format():
    return_format = (
        "You must verify your proposed solution by using the function 'give_llm_feedback()'. "
        "This function checks for collisions or rule violations and will suggest corrections if needed. "
        "Before submitting a new solution, always explain why you think this will be a good proposal. "
        "Your explanation should include:\n"
        "- Why you chose this specific placement and rotation for each wall. \n"
        "- Which people benefit from improved focus or better light conditions.\n"
        "- How the wall placement contributes to architectural quality (e.g., aesthetics, openness, flow).\n"

        " In this explanation, give a clear reasoning which lines are blocked and not blocked (for noise, light and room circulation). \n\n"
        
        "Repeat this process until you generate a few valid solutions. Choose the best one at the end and give a clear reasoning why this one is better than the others.\n\n"

        "When you are satisfied with your solution, return the solution in the following format:\n"
        "Explanation: <your explanation here, as defined above>\n"
        "Movable walls: [<list of movable walls in the format (x, y, angle)>]\n"
        "Don't use formatting such as bullet points or lists or bold text or italics in this final line containing the movable walls.\n"
        "Then do a last tool with iteration -1 and the movable walls as input. This will be the final solution.\n\n"
    )
    return return_format